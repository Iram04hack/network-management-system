# Configuration Nginx pour servir les fichiers statiques de Django

server {
    listen 80;
    server_name localhost;
    
    # Rediriger HTTP vers HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name localhost;
    
    # Certificats SSL
    ssl_certificate     /etc/ssl/certs/nms-cert.pem;
    ssl_certificate_key /etc/ssl/private/nms-key.pem;
    
    # Paramètres de sécurité SSL
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305';
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Fichiers statiques - Point principal
    location /static/ {
        alias /home/adjada/network-management-system/web-interface/django__backend/staticfiles/;
        expires 30d;
        access_log off;
        add_header Cache-Control "public, max-age=2592000";
    }
    
    # Fichiers media
    location /media/ {
        alias /home/adjada/network-management-system/web-interface/django__backend/media/;
        expires 30d;
        access_log off;
        add_header Cache-Control "public, max-age=2592000";
    }
    
    # Fichiers admin et rest_framework
    location /static/admin/ {
        alias /home/adjada/network-management-system/web-interface/django__backend/staticfiles/admin/;
        expires 30d;
        access_log off;
    }
    
    location /static/rest_framework/ {
        alias /home/adjada/network-management-system/web-interface/django__backend/staticfiles/rest_framework/;
        expires 30d;
        access_log off;
    }
    
    # Proxy pour le backend Django
    location / {
        proxy_pass https://localhost:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_redirect off;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
