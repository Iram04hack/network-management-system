worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;
    client_max_body_size 20M;

    # Compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Configuration SSL
    server {
        listen 80;
        server_name localhost;
        
        # Rediriger HTTP vers HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name localhost;

        # Certificats SSL
        ssl_certificate     /etc/ssl/certs/nms-cert.pem;
        ssl_certificate_key /etc/ssl/private/nms-key.pem;

        # Paramètres de sécurité SSL
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305';
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Fichiers statiques - utilisation du répertoire /var/www/html
        location /static/ {
            alias /var/www/html/static/;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
            add_header Access-Control-Allow-Origin *;
            try_files $uri $uri/ =404;
        }

        location /media/ {
            alias /var/www/html/media/;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
            add_header Access-Control-Allow-Origin *;
            try_files $uri $uri/ =404;
        }

        # Proxy pour le backend Django
        location / {
            proxy_pass http://localhost:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_redirect off;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Proxy pour les WebSockets
        location /ws/ {
            proxy_pass http://localhost:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }
    }
} 