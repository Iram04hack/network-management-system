# Generated by Django 4.2.23 on 2025-07-08 11:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="GNS3ServerConfig",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Nom du serveur GNS3", max_length=100),
                ),
                (
                    "host",
                    models.CharField(
                        help_text="Adresse IP ou nom d'hôte", max_length=255
                    ),
                ),
                (
                    "port",
                    models.IntegerField(default=3080, help_text="Port du serveur GNS3"),
                ),
                (
                    "protocol",
                    models.CharField(
                        choices=[("http", "HTTP"), ("https", "HTTPS")],
                        default="http",
                        max_length=10,
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True,
                        help_text="Nom d'utilisateur (optionnel)",
                        max_length=100,
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        blank=True, help_text="Mot de passe (optionnel)", max_length=255
                    ),
                ),
                (
                    "verify_ssl",
                    models.BooleanField(
                        default=True, help_text="Vérifier le certificat SSL"
                    ),
                ),
                (
                    "timeout",
                    models.IntegerField(
                        default=30, help_text="Timeout des requêtes en secondes"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, help_text="Serveur actif"),
                ),
                (
                    "is_default",
                    models.BooleanField(default=False, help_text="Serveur par défaut"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_connection_test", models.DateTimeField(blank=True, null=True)),
                (
                    "connection_status",
                    models.CharField(
                        choices=[
                            ("connected", "Connecté"),
                            ("disconnected", "Déconnecté"),
                            ("error", "Erreur"),
                            ("unknown", "Inconnu"),
                        ],
                        default="unknown",
                        max_length=20,
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuration Serveur GNS3",
                "verbose_name_plural": "Configurations Serveurs GNS3",
                "ordering": ["-is_default", "name"],
            },
        ),
        migrations.CreateModel(
            name="GNS3ServiceMetrics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("service_status", models.CharField(default="unknown", max_length=20)),
                ("gns3_server_connected", models.BooleanField(default=False)),
                ("redis_cache_available", models.BooleanField(default=False)),
                ("websocket_connections_active", models.IntegerField(default=0)),
                ("events_processed_total", models.BigIntegerField(default=0)),
                ("events_processed_last_hour", models.IntegerField(default=0)),
                ("events_failed_total", models.BigIntegerField(default=0)),
                ("events_retried_total", models.BigIntegerField(default=0)),
                ("api_calls_total", models.BigIntegerField(default=0)),
                ("api_calls_last_hour", models.IntegerField(default=0)),
                ("api_errors_total", models.BigIntegerField(default=0)),
                ("average_response_time_ms", models.FloatField(default=0.0)),
                ("cache_hits_total", models.BigIntegerField(default=0)),
                ("cache_misses_total", models.BigIntegerField(default=0)),
                ("cache_hit_ratio", models.FloatField(default=0.0)),
                ("nodes_total", models.IntegerField(default=0)),
                ("nodes_running", models.IntegerField(default=0)),
                ("projects_total", models.IntegerField(default=0)),
                ("projects_active", models.IntegerField(default=0)),
                ("uptime_seconds", models.BigIntegerField(default=0)),
                ("memory_usage_mb", models.FloatField(default=0.0)),
                ("cpu_usage_percent", models.FloatField(default=0.0)),
            ],
            options={
                "verbose_name": "Métrique Service GNS3",
                "verbose_name_plural": "Métriques Service GNS3",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["timestamp"], name="common_gns3_timesta_f483e0_idx"
                    ),
                    models.Index(
                        fields=["service_status", "timestamp"],
                        name="common_gns3_service_2541a5_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="GNS3ModuleSubscription",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "module_name",
                    models.CharField(help_text="Nom du module", max_length=50),
                ),
                (
                    "subscription_types",
                    models.JSONField(
                        help_text="Types d'événements auxquels le module est abonné"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "callback_url",
                    models.URLField(
                        blank=True, help_text="URL de callback pour webhook (optionnel)"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_event_received", models.DateTimeField(blank=True, null=True)),
                ("events_received_count", models.BigIntegerField(default=0)),
                ("events_processed_count", models.BigIntegerField(default=0)),
                ("events_failed_count", models.BigIntegerField(default=0)),
            ],
            options={
                "verbose_name": "Abonnement Module GNS3",
                "verbose_name_plural": "Abonnements Modules GNS3",
                "ordering": ["module_name"],
                "unique_together": {("module_name",)},
            },
        ),
        migrations.CreateModel(
            name="GNS3EventLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "event_id",
                    models.CharField(
                        help_text="ID unique de l'événement",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "event_type",
                    models.CharField(help_text="Type d'événement GNS3", max_length=50),
                ),
                (
                    "source",
                    models.CharField(default="gns3_central_service", max_length=100),
                ),
                (
                    "project_id",
                    models.CharField(
                        blank=True,
                        help_text="ID du projet GNS3 concerné",
                        max_length=100,
                    ),
                ),
                (
                    "node_id",
                    models.CharField(
                        blank=True, help_text="ID du nœud GNS3 concerné", max_length=100
                    ),
                ),
                ("data", models.JSONField(help_text="Données de l'événement")),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("critical", "Critique"),
                            ("high", "Élevée"),
                            ("normal", "Normale"),
                            ("low", "Faible"),
                        ],
                        default="normal",
                        max_length=20,
                    ),
                ),
                (
                    "delivery_status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("delivered", "Livré"),
                            ("failed", "Échoué"),
                            ("retry", "Retry"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("retry_count", models.IntegerField(default=0)),
                (
                    "target_modules",
                    models.JSONField(
                        blank=True, default=list, help_text="Modules cibles"
                    ),
                ),
                (
                    "correlation_id",
                    models.CharField(
                        blank=True, help_text="ID de corrélation", max_length=100
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Log Événement GNS3",
                "verbose_name_plural": "Logs Événements GNS3",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["event_type", "created_at"],
                        name="common_gns3_event_t_7a7a06_idx",
                    ),
                    models.Index(
                        fields=["project_id", "created_at"],
                        name="common_gns3_project_907149_idx",
                    ),
                    models.Index(
                        fields=["node_id", "created_at"],
                        name="common_gns3_node_id_3a8e5e_idx",
                    ),
                    models.Index(
                        fields=["correlation_id"], name="common_gns3_correla_884f0a_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="GNS3WebSocketConnection",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("connection_id", models.CharField(max_length=100, unique=True)),
                ("channel_name", models.CharField(max_length=255)),
                ("client_ip", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                (
                    "subscriptions",
                    models.JSONField(
                        default=list,
                        help_text="Types d'événements auxquels la connexion est abonnée",
                    ),
                ),
                ("connected_at", models.DateTimeField(auto_now_add=True)),
                ("last_heartbeat", models.DateTimeField(auto_now=True)),
                ("disconnected_at", models.DateTimeField(blank=True, null=True)),
                ("events_sent", models.BigIntegerField(default=0)),
                ("messages_received", models.BigIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Connexion WebSocket GNS3",
                "verbose_name_plural": "Connexions WebSocket GNS3",
                "ordering": ["-connected_at"],
                "indexes": [
                    models.Index(
                        fields=["connection_id"], name="common_gns3_connect_43b960_idx"
                    ),
                    models.Index(
                        fields=["is_active", "connected_at"],
                        name="common_gns3_is_acti_71e8d8_idx",
                    ),
                ],
            },
        ),
    ]
