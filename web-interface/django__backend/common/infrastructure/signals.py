"""
Signaux Django pour l'initialisation automatique des services d'int√©gration.
"""
from django.apps import apps
from django.db.models.signals import post_migrate
from django.dispatch import receiver
from django.conf import settings
import logging
import threading
from .central_topology_service import central_topology_service
from .gns3_integration_service import gns3_integration_service
from .ubuntu_notification_service import ubuntu_notification_service

logger = logging.getLogger(__name__)

@receiver(post_migrate)
def initialize_integration_services(sender, **kwargs):
    """
    Initialise les services d'int√©gration apr√®s les migrations.
    """
    # S'assurer que nous n'initialisons qu'une seule fois
    if not hasattr(initialize_integration_services, 'initialized'):
        initialize_integration_services.initialized = True
        
        def delayed_initialization():
            """Initialisation retard√©e pour √©viter les probl√®mes de d√©marrage."""
            try:
                logger.info("üöÄ Initialisation des services d'int√©gration NMS")
                
                # Test des notifications Ubuntu
                if ubuntu_notification_service.test_notification():
                    logger.info("‚úÖ Service de notification Ubuntu op√©rationnel")
                else:
                    logger.warning("‚ö†Ô∏è Service de notification Ubuntu non disponible")
                
                # Int√©gration automatique des modules
                central_topology_service.auto_integrate_modules()
                
                # D√©marrer la surveillance GNS3 si configur√©
                auto_monitor = getattr(settings, 'GNS3_AUTO_MONITOR', True)
                if auto_monitor:
                    monitor_interval = getattr(settings, 'GNS3_MONITOR_INTERVAL', 30)
                    central_topology_service.start_monitoring(monitor_interval)
                    logger.info(f"üîç Surveillance GNS3 d√©marr√©e (intervalle: {monitor_interval}s)")
                
                # Effectuer une d√©tection initiale de GNS3
                detection_result = gns3_integration_service.detect_gns3_server()
                if detection_result.get('available'):
                    logger.info("‚úÖ Serveur GNS3 d√©tect√© et int√©gr√©")
                    
                    # Envoyer notification de succ√®s
                    ubuntu_notification_service.send_notification(
                        title="üéâ NMS Int√©gration Compl√®te",
                        message="Tous les services d'int√©gration sont op√©rationnels et le serveur GNS3 a √©t√© d√©tect√©",
                        urgency='low',
                        category='system.startup'
                    )
                else:
                    logger.info("‚ÑπÔ∏è Serveur GNS3 non d√©tect√© - surveillance active")
                    
                    ubuntu_notification_service.send_notification(
                        title="üîç NMS en surveillance",
                        message="Services d'int√©gration initialis√©s. Recherche du serveur GNS3 en cours...",
                        urgency='low',
                        category='system.startup'
                    )
                
                logger.info("‚úÖ Initialisation des services d'int√©gration termin√©e")
                
            except Exception as e:
                logger.error(f"‚ùå Erreur lors de l'initialisation des services d'int√©gration: {e}")
                
                ubuntu_notification_service.send_notification(
                    title="‚ùå Erreur d'initialisation NMS",
                    message=f"Erreur lors de l'initialisation des services d'int√©gration: {str(e)}",
                    urgency='critical',
                    category='system.error'
                )
        
        # D√©marrer l'initialisation dans un thread s√©par√© avec un d√©lai
        init_thread = threading.Timer(5.0, delayed_initialization)
        init_thread.daemon = True
        init_thread.start()
        
        logger.info("üîÑ Initialisation des services d'int√©gration programm√©e") 