# Generated by Django 4.2.23 on 2025-07-09 10:39

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AuditLogModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user", models.CharField(blank=True, max_length=255, null=True)),
                ("action", models.CharField(max_length=100)),
                ("entity_type", models.CharField(max_length=100)),
                ("entity_id", models.CharField(max_length=255)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("details", models.JSONField(blank=True, default=dict)),
                ("ip_address", models.CharField(blank=True, max_length=50, null=True)),
                ("user_agent", models.CharField(blank=True, max_length=500, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Journal d'audit",
                "verbose_name_plural": "Journaux d'audit",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="CorrelationRuleModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("conditions", models.JSONField()),
                (
                    "time_window",
                    models.IntegerField(help_text="Fenêtre de temps en secondes"),
                ),
                (
                    "aggregation_field",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("threshold", models.IntegerField(default=1)),
                ("severity", models.CharField(default="medium", max_length=20)),
                ("enabled", models.BooleanField(default=True)),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("last_modified", models.DateTimeField(auto_now=True)),
                ("last_triggered", models.DateTimeField(blank=True, null=True)),
                ("trigger_count", models.IntegerField(default=0)),
            ],
            options={
                "verbose_name": "Règle de corrélation",
                "verbose_name_plural": "Règles de corrélation",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="IncidentResponseWorkflowModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("version", models.CharField(default="1.0", max_length=20)),
                (
                    "trigger_type",
                    models.CharField(
                        choices=[
                            ("alert_severity", "Sévérité d'alerte"),
                            ("alert_source", "Source d'alerte"),
                            ("ioc_match", "Correspondance IOC"),
                            ("vulnerability_score", "Score de vulnérabilité"),
                            ("correlation_rule", "Règle de corrélation"),
                            ("manual", "Déclenchement manuel"),
                        ],
                        max_length=30,
                    ),
                ),
                ("trigger_conditions", models.JSONField(default=dict)),
                ("steps", models.JSONField(default=list)),
                ("auto_execute", models.BooleanField(default=False)),
                ("requires_approval", models.BooleanField(default=True)),
                ("timeout_minutes", models.IntegerField(default=60)),
                (
                    "assigned_team",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("escalation_rules", models.JSONField(blank=True, default=dict)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Actif"),
                            ("inactive", "Inactif"),
                            ("draft", "Brouillon"),
                            ("archived", "Archivé"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("created_by", models.CharField(blank=True, max_length=255, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("execution_count", models.IntegerField(default=0)),
                ("success_count", models.IntegerField(default=0)),
                ("last_executed", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Workflow de réponse aux incidents",
                "verbose_name_plural": "Workflows de réponse aux incidents",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="IPReputationModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ip_address", models.CharField(max_length=50, unique=True)),
                ("reputation_score", models.FloatField(default=0.0)),
                (
                    "classification",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("is_blacklisted", models.BooleanField(default=False)),
                ("is_whitelisted", models.BooleanField(default=False)),
                ("first_seen", models.DateTimeField(auto_now_add=True)),
                ("last_seen", models.DateTimeField(auto_now=True)),
                ("alert_count", models.IntegerField(default=0)),
                (
                    "tags",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=50),
                        blank=True,
                        null=True,
                        size=None,
                    ),
                ),
            ],
            options={
                "verbose_name": "Réputation d'IP",
                "verbose_name_plural": "Réputations d'IP",
                "ordering": ["ip_address"],
            },
        ),
        migrations.CreateModel(
            name="SecurityPolicyModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "rules",
                    models.JSONField(
                        default=dict, help_text="Règles de sécurité au format JSON"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("created_by", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "verbose_name": "Politique de sécurité",
                "verbose_name_plural": "Politiques de sécurité",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="SecurityReportModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("vulnerability", "Rapport de vulnérabilités"),
                            (
                                "threat_intelligence",
                                "Rapport d'intelligence de menaces",
                            ),
                            ("incident_response", "Rapport de réponse aux incidents"),
                            ("compliance", "Rapport de conformité"),
                            ("security_posture", "Rapport de posture de sécurité"),
                            ("alert_summary", "Résumé des alertes"),
                            ("custom", "Rapport personnalisé"),
                        ],
                        max_length=30,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("parameters", models.JSONField(default=dict)),
                ("filters", models.JSONField(default=dict)),
                (
                    "format",
                    models.CharField(
                        choices=[
                            ("pdf", "PDF"),
                            ("json", "JSON"),
                            ("csv", "CSV"),
                            ("html", "HTML"),
                            ("excel", "Excel"),
                        ],
                        default="pdf",
                        max_length=10,
                    ),
                ),
                ("is_scheduled", models.BooleanField(default=False)),
                (
                    "schedule_frequency",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("next_execution", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("generating", "En cours de génération"),
                            ("completed", "Terminé"),
                            ("failed", "Échoué"),
                            ("scheduled", "Programmé"),
                        ],
                        default="scheduled",
                        max_length=20,
                    ),
                ),
                ("generated_at", models.DateTimeField(blank=True, null=True)),
                ("file_path", models.CharField(blank=True, max_length=500, null=True)),
                ("file_size", models.BigIntegerField(blank=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=255, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("recipients", models.JSONField(default=list)),
                ("auto_send", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Rapport de sécurité",
                "verbose_name_plural": "Rapports de sécurité",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SecurityRuleModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("rule_type", models.CharField(max_length=50)),
                ("content", models.TextField(blank=True, null=True)),
                ("source_ip", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "destination_ip",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("source_port", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "destination_port",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("protocol", models.CharField(blank=True, max_length=10, null=True)),
                ("action", models.CharField(blank=True, max_length=50, null=True)),
                ("enabled", models.BooleanField(default=True)),
                ("priority", models.IntegerField(default=100)),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("last_modified", models.DateTimeField(auto_now=True)),
                ("trigger_count", models.IntegerField(default=0)),
                (
                    "tags",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=50),
                        blank=True,
                        null=True,
                        size=None,
                    ),
                ),
            ],
            options={
                "verbose_name": "Règle de sécurité",
                "verbose_name_plural": "Règles de sécurité",
                "db_table": "security_management_securityrule",
                "ordering": ["priority", "name"],
            },
        ),
        migrations.CreateModel(
            name="TrafficBaselineModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "network_segment",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("service", models.CharField(blank=True, max_length=100, null=True)),
                ("avg_requests_per_minute", models.FloatField(blank=True, null=True)),
                ("avg_bytes_per_minute", models.FloatField(blank=True, null=True)),
                (
                    "avg_connections_per_minute",
                    models.FloatField(blank=True, null=True),
                ),
                ("request_threshold_pct", models.FloatField(default=50.0)),
                ("byte_threshold_pct", models.FloatField(default=50.0)),
                ("connection_threshold_pct", models.FloatField(default=50.0)),
                ("is_learning", models.BooleanField(default=True)),
                ("learning_period_end", models.DateTimeField(blank=True, null=True)),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Ligne de base de trafic",
                "verbose_name_plural": "Lignes de base de trafic",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="VulnerabilityModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cve_id", models.CharField(blank=True, max_length=50, null=True)),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("critical", "Critique"),
                            ("high", "Haute"),
                            ("medium", "Moyenne"),
                            ("low", "Basse"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                ("cvss_score", models.FloatField(blank=True, null=True)),
                (
                    "cvss_vector",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("cwe_id", models.CharField(blank=True, max_length=50, null=True)),
                ("affected_systems", models.JSONField(default=list)),
                (
                    "affected_software",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "affected_versions",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("identified", "Identifiée"),
                            ("confirmed", "Confirmée"),
                            ("in_progress", "En cours de traitement"),
                            ("patched", "Corrigée"),
                            ("mitigated", "Atténuée"),
                            ("false_positive", "Faux positif"),
                            ("accepted_risk", "Risque accepté"),
                        ],
                        default="identified",
                        max_length=20,
                    ),
                ),
                ("discovered_date", models.DateTimeField(auto_now_add=True)),
                ("published_date", models.DateTimeField(blank=True, null=True)),
                ("patched_date", models.DateTimeField(blank=True, null=True)),
                ("references", models.JSONField(default=list)),
                ("patch_available", models.BooleanField(default=False)),
                ("patch_info", models.JSONField(blank=True, default=dict)),
                (
                    "assigned_to",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("priority", models.IntegerField(default=3)),
            ],
            options={
                "verbose_name": "Vulnérabilité",
                "verbose_name_plural": "Vulnérabilités",
                "ordering": ["-cvss_score", "-discovered_date"],
            },
        ),
        migrations.CreateModel(
            name="TrafficAnomalyModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("anomaly_type", models.CharField(max_length=50)),
                ("severity", models.CharField(max_length=20)),
                ("current_value", models.FloatField()),
                ("baseline_value", models.FloatField()),
                ("deviation_percent", models.FloatField()),
                ("timestamp", models.DateTimeField()),
                ("source_ip", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "baseline",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="anomalies",
                        to="security_management.trafficbaselinemodel",
                    ),
                ),
            ],
            options={
                "verbose_name": "Anomalie de trafic",
                "verbose_name_plural": "Anomalies de trafic",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="ThreatIntelligenceModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "indicator_type",
                    models.CharField(
                        choices=[
                            ("ip", "Adresse IP"),
                            ("domain", "Nom de domaine"),
                            ("url", "URL"),
                            ("hash_md5", "Hash MD5"),
                            ("hash_sha1", "Hash SHA1"),
                            ("hash_sha256", "Hash SHA256"),
                            ("email", "Adresse email"),
                            ("filename", "Nom de fichier"),
                            ("registry_key", "Clé de registre"),
                            ("mutex", "Mutex"),
                            ("user_agent", "User-Agent"),
                        ],
                        max_length=20,
                    ),
                ),
                ("indicator_value", models.CharField(max_length=500)),
                (
                    "threat_type",
                    models.CharField(
                        choices=[
                            ("malware", "Malware"),
                            ("phishing", "Phishing"),
                            ("botnet", "Botnet"),
                            ("apt", "APT"),
                            ("ransomware", "Ransomware"),
                            ("spam", "Spam"),
                            ("fraud", "Fraude"),
                            ("exploit", "Exploit"),
                            ("c2", "Command & Control"),
                            ("other", "Autre"),
                        ],
                        max_length=20,
                    ),
                ),
                ("confidence", models.FloatField(default=0.5)),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("critical", "Critique"),
                            ("high", "Haute"),
                            ("medium", "Moyenne"),
                            ("low", "Basse"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "tags",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=50),
                        blank=True,
                        null=True,
                        size=None,
                    ),
                ),
                ("source", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "source_reliability",
                    models.CharField(
                        choices=[
                            ("low", "Faible"),
                            ("medium", "Moyen"),
                            ("high", "Élevé"),
                            ("confirmed", "Confirmé"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                (
                    "external_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("first_seen", models.DateTimeField(auto_now_add=True)),
                ("last_seen", models.DateTimeField(auto_now=True)),
                ("valid_until", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_whitelisted", models.BooleanField(default=False)),
                ("context", models.JSONField(blank=True, default=dict)),
            ],
            options={
                "verbose_name": "Intelligence de menace",
                "verbose_name_plural": "Intelligence de menaces",
                "ordering": ["-last_seen"],
                "unique_together": {("indicator_type", "indicator_value")},
            },
        ),
        migrations.CreateModel(
            name="SecurityAlertModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("source_ip", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "destination_ip",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("source_port", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "destination_port",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("protocol", models.CharField(blank=True, max_length=10, null=True)),
                ("detection_time", models.DateTimeField()),
                ("severity", models.CharField(max_length=20)),
                ("status", models.CharField(default="new", max_length=50)),
                ("raw_data", models.JSONField(blank=True, null=True)),
                ("false_positive", models.BooleanField(default=False)),
                (
                    "tags",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=50),
                        blank=True,
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "source_rule",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="alerts",
                        to="security_management.securityrulemodel",
                    ),
                ),
            ],
            options={
                "verbose_name": "Alerte de sécurité",
                "verbose_name_plural": "Alertes de sécurité",
                "ordering": ["-detection_time"],
            },
        ),
        migrations.CreateModel(
            name="IncidentResponseExecutionModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("triggered_by_event", models.JSONField(blank=True, default=dict)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("running", "En cours"),
                            ("completed", "Terminé"),
                            ("failed", "Échoué"),
                            ("cancelled", "Annulé"),
                            ("timeout", "Timeout"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("current_step", models.IntegerField(default=0)),
                ("steps_log", models.JSONField(default=list)),
                (
                    "assigned_to",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "approved_by",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                ("output_data", models.JSONField(blank=True, default=dict)),
                ("error_message", models.TextField(blank=True, null=True)),
                (
                    "triggered_by_alert",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="incident_responses",
                        to="security_management.securityalertmodel",
                    ),
                ),
                (
                    "workflow",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="executions",
                        to="security_management.incidentresponseworkflowmodel",
                    ),
                ),
            ],
            options={
                "verbose_name": "Exécution de workflow",
                "verbose_name_plural": "Exécutions de workflows",
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="CorrelationRuleMatchModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("matched_at", models.DateTimeField()),
                ("triggering_events", models.JSONField()),
                ("context_data", models.JSONField(blank=True, null=True)),
                (
                    "rule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="matches",
                        to="security_management.correlationrulemodel",
                    ),
                ),
            ],
            options={
                "verbose_name": "Correspondance de règle de corrélation",
                "verbose_name_plural": "Correspondances de règles de corrélation",
                "ordering": ["-matched_at"],
            },
        ),
    ]
