"""
Configuration des URLs unifi√©e pour l'application api_clients.

Ce module d√©finit une API REST compl√®te et unifi√©e pour tous les clients
avec une documentation Swagger coh√©rente et des tags "Clients" unifi√©s.
"""

from django.urls import path, include
from rest_framework import permissions
from rest_framework.routers import DefaultRouter
from drf_yasg.views import get_schema_view
from drf_yasg import openapi
from . import views

# Configuration unifi√©e de Swagger UI avec tag unique "Clients"
schema_view = get_schema_view(
    openapi.Info(
        title="üöÄ API Clients - Documentation Unifi√©e",
        default_version='v2.0',
        description="""
# üéØ API de Gestion des Clients R√©seau - Version Unifi√©e

Cette API fournit une interface **unifi√©e** et **compl√®te** pour l'interaction avec tous les clients 
du syst√®me de gestion r√©seau. Tous les endpoints sont organis√©s sous le tag unique **"Clients"** 
pour une navigation simplifi√©e.

## üèóÔ∏è Architecture Unifi√©e

### üì° **Clients R√©seau**
- **GNS3Client** - Gestion compl√®te des topologies et simulations r√©seau
- **SNMPClient** - Interrogation avanc√©e des √©quipements r√©seau
- **NetflowClient** - Analyse sophistiqu√©e des flux de trafic

### üìä **Clients Monitoring**
- **PrometheusClient** - Collecte de m√©triques et alertes
- **GrafanaClient** - Tableaux de bord et visualisations
- **ElasticsearchClient** - Indexation et recherche avanc√©e
- **NetdataClient** - Monitoring temps r√©el des syst√®mes
- **NtopngClient** - Analyse avanc√©e du trafic r√©seau

### üè¢ **Clients Infrastructure**
- **HAProxyClient** - Load balancing et proxy avanc√©
- **TrafficControlClient** - Gestion QoS Linux (tc)

### üîí **Clients S√©curit√©**
- **Fail2BanClient** - Protection contre les intrusions
- **SuricataClient** - D√©tection d'intrusions IDS/IPS

## üí° **Avantages de cette API Unifi√©e**

### üè∑Ô∏è **Tag Unique "Clients"**
- ‚úÖ Navigation simplifi√©e avec un seul tag
- ‚úÖ Structure coh√©rente sur tous les endpoints
- ‚úÖ Documentation unifi√©e et facile √† parcourir

### ü§ñ **Documentation Automatique**
- ‚úÖ G√©n√©ration automatique par introspection du code
- ‚úÖ Pas d'erreurs manuelles dans les sch√©mas
- ‚úÖ Mise √† jour automatique lors des modifications
- ‚úÖ Coh√©rence garantie entre code et documentation

### üîí **S√©curit√© et Fiabilit√©**
- ‚úÖ Validation robuste des param√®tres d'entr√©e
- ‚úÖ Gestion d'erreurs d√©taill√©e avec codes sp√©cifiques
- ‚úÖ Logs d√©taill√©s pour le debugging

## üöÄ **Endpoints Disponibles**

### üîó **Endpoints Principaux**
- **GET** `/network/` - Statut des clients r√©seau
- **GET** `/monitoring/` - Statut des clients monitoring
- **GET** `/infrastructure/` - Statut des clients infrastructure (placeholder)
- **GET** `/security/` - Statut des clients s√©curit√© (placeholder)

### üìä **GNS3 - Gestion des Projets**
- **GET** `/network/gns3/projects/` - Liste des projets
- **POST** `/network/gns3/projects/create/` - Cr√©er un projet (placeholder)
- **PUT** `/network/gns3/projects/{project_id}/` - Modifier un projet (placeholder)
- **DELETE** `/network/gns3/projects/{project_id}/delete/` - Supprimer un projet (placeholder)

### üîç **Elasticsearch - Gestion des Indices**
- **GET** `/monitoring/elasticsearch/indices/` - Liste des indices
- **POST** `/monitoring/elasticsearch/indices/create/` - Cr√©er un indice

### üìà **Grafana - Gestion des Dashboards**
- **GET** `/monitoring/grafana/dashboards/` - Liste des dashboards

### üîí **Fail2Ban - Gestion de la S√©curit√©**
- **GET** `/security/fail2ban/jails/` - Liste des jails
- **POST** `/security/fail2ban/ban/` - Bannir une IP

### üè• **Monitoring et Sant√©**
- **GET** `/health/` - V√©rification compl√®te de sant√©
- **POST** `/bulk/gns3/` - Op√©rations en lot sur GNS3

### ‚öôÔ∏è **Configuration des Clients**
- **POST** `/config/create/` - Configurer un nouveau client (placeholder)
- **PUT** `/config/{client_name}/` - Modifier configuration (placeholder)
- **DELETE** `/config/{client_name}/delete/` - Supprimer configuration (placeholder)

## üéØ **Guide d'Utilisation**

### V√©rifier la sant√© globale
```bash
curl -X GET "https://localhost:8000/api/clients/health/" \\
     -H "Accept: application/json"
```

### Lister les projets GNS3
```bash
curl -X GET "https://localhost:8000/api/clients/network/gns3/projects/" \\
     -H "Accept: application/json"
```

### Cr√©er un indice Elasticsearch
```bash
curl -X POST "https://localhost:8000/api/clients/monitoring/elasticsearch/indices/create/" \\
     -H "Content-Type: application/json" \\
     -d '{"index_name": "logs-app", "settings": {"number_of_shards": 1}}'
```

### Bannir une IP avec Fail2Ban
```bash
curl -X POST "https://localhost:8000/api/clients/security/fail2ban/ban/" \\
     -H "Content-Type: application/json" \\
     -d '{"ip_address": "192.168.1.100", "jail_name": "sshd"}'
```

---

üéâ **Documentation g√©n√©r√©e automatiquement et toujours √† jour !** 
Tous les endpoints utilisent le tag unifi√© **"Clients"** pour une exp√©rience simplifi√©e.
        """,
        terms_of_service="https://www.nms.local/terms/",
        contact=openapi.Contact(email="admin@nms.local", name="√âquipe NMS"),
        license=openapi.License(name="MIT License"),
    ),
    public=True,
    permission_classes=(permissions.AllowAny,),
    patterns=[
        path('api/clients/', include('api_clients.urls')),
    ],
)

urlpatterns = [
    # ==================== DOCUMENTATION SWAGGER UNIFI√âE ====================
    path('', schema_view.with_ui('swagger', cache_timeout=0), name='api-clients-home'),
    path('docs/', schema_view.with_ui('swagger', cache_timeout=0), name='schema-swagger-ui'),
    path('redoc/', schema_view.with_ui('redoc', cache_timeout=0), name='schema-redoc'),
    path('swagger.json', schema_view.without_ui(cache_timeout=0), name='schema-json'),
    path('openapi.yaml', schema_view.without_ui(cache_timeout=0), name='schema-yaml'),
    
    # ==================== STATUT DES CLIENTS (Fonctionnels) ====================
    path('network/', views.network_clients, name='network-clients-status'),
    path('monitoring/', views.monitoring_clients, name='monitoring-clients-status'),
    path('infrastructure/', views.infrastructure_clients, name='infrastructure-clients-status'),
    path('security/', views.security_clients, name='security-clients-status'),
    
    # ==================== GNS3 - GESTION DES PROJETS (Fonctionnels) ====================
    path('network/gns3/projects/', views.gns3_projects, name='gns3-projects-list'),
    path('network/gns3/projects/create/', views.create_gns3_project, name='gns3-projects-create'),
    path('network/gns3/projects/<str:project_id>/', views.update_gns3_project, name='gns3-projects-update'),
    path('network/gns3/projects/<str:project_id>/delete/', views.delete_gns3_project, name='gns3-projects-delete'),
    
    # ==================== SNMP - REQU√äTES R√âSEAU (Placeholder) ====================
    path('network/snmp/query/', views.snmp_query, name='snmp-query'),
    
    # ==================== PROMETHEUS - M√âTRIQUES (Placeholder) ====================
    path('monitoring/prometheus/query/', views.prometheus_query, name='prometheus-query'),
    
    # ==================== GRAFANA - DASHBOARDS (Fonctionnel) ====================
    path('monitoring/grafana/dashboards/', views.grafana_dashboards, name='grafana-dashboards-list'),
    
    # ==================== ELASTICSEARCH - INDICES (Fonctionnels) ====================
    path('monitoring/elasticsearch/indices/', views.elasticsearch_indices, name='elasticsearch-indices-list'),
    path('monitoring/elasticsearch/indices/create/', views.create_elasticsearch_index, name='elasticsearch-index-create'),
    
    # ==================== FAIL2BAN - S√âCURIT√â (Fonctionnels) ====================
    path('security/fail2ban/jails/', views.fail2ban_jails, name='fail2ban-jails-list'),
    path('security/fail2ban/ban/', views.ban_ip_fail2ban, name='fail2ban-ban-ip'),
    
    # ==================== OP√âRATIONS EN LOT (Fonctionnel) ====================
    path('bulk/gns3/', views.bulk_operations_gns3, name='bulk-operations-gns3'),
    
    # ==================== CONFIGURATION DES CLIENTS (Placeholders) ====================
    path('config/create/', views.create_client_config, name='client-config-create'),
    path('config/<str:client_name>/', views.update_client_config, name='client-config-update'),
    path('config/<str:client_name>/delete/', views.delete_client_config, name='client-config-delete'),
    
    # ==================== SANT√â ET MONITORING (Fonctionnel) ====================
    path('health/', views.comprehensive_health_check, name='comprehensive-health-check'),
]