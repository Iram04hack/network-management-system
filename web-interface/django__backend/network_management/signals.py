"""
Signaux pour le module network_management.

Ce module contient les signaux Django utilis√©s pour d√©clencher
des actions automatiques lors de certains √©v√©nements.
"""

import logging
from django.db.models.signals import post_save, post_delete
from django.dispatch import receiver
from .infrastructure.models import NetworkDevice, NetworkInterface, NetworkConnection

logger = logging.getLogger(__name__)


@receiver(post_save, sender=NetworkDevice)
def device_saved(sender, instance, created, **kwargs):
    """Signal d√©clench√© lors de la sauvegarde d'un √©quipement r√©seau."""
    if created:
        logger.info(f"‚úÖ Nouvel √©quipement r√©seau cr√©√©: {instance.name} ({instance.device_type})")
        # Actions √† effectuer lors de la cr√©ation d'un nouvel √©quipement
        # Par exemple : d√©marrer une d√©couverte automatique, configurer des alertes, etc.
    else:
        logger.info(f"üîÑ √âquipement r√©seau mis √† jour: {instance.name}")
        # Actions √† effectuer lors de la mise √† jour d'un √©quipement existant


@receiver(post_delete, sender=NetworkDevice)
def device_deleted(sender, instance, **kwargs):
    """Signal d√©clench√© lors de la suppression d'un √©quipement r√©seau."""
    logger.warning(f"üóëÔ∏è √âquipement r√©seau supprim√©: {instance.name}")
    # Actions de nettoyage : supprimer les interfaces, connexions, alertes associ√©es


@receiver(post_save, sender=NetworkInterface)
def interface_saved(sender, instance, created, **kwargs):
    """Signal d√©clench√© lors de la sauvegarde d'une interface r√©seau."""
    if created:
        logger.info(f"‚úÖ Nouvelle interface cr√©√©e: {instance.name} sur {instance.device.name}")
    else:
        logger.info(f"üîÑ Interface mise √† jour: {instance.name}")


@receiver(post_save, sender=NetworkConnection)
def connection_saved(sender, instance, created, **kwargs):
    """Signal d√©clench√© lors de la sauvegarde d'une connexion r√©seau."""
    if created:
        logger.info(f"üîó Nouvelle connexion cr√©√©e: {instance.source_interface} <-> {instance.target_interface}")
        # Actions possibles : mise √† jour de la topologie, recalcul des chemins, etc. 