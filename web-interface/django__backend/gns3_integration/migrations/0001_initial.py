# Generated by Django 4.2.23 on 2025-06-28 14:19

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="GNS3Config",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "key",
                    models.CharField(max_length=255, unique=True, verbose_name="Clé"),
                ),
                ("value", models.JSONField(verbose_name="Valeur")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuration GNS3",
                "verbose_name_plural": "Configurations GNS3",
                "ordering": ["key"],
            },
        ),
        migrations.CreateModel(
            name="Node",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Nom")),
                ("node_id", models.CharField(max_length=255, verbose_name="ID GNS3")),
                (
                    "node_type",
                    models.CharField(
                        choices=[
                            ("vpcs", "VPCS"),
                            ("qemu", "QEMU VM"),
                            ("docker", "Docker Container"),
                            ("dynamips", "Dynamips Router"),
                            ("iou", "IOU Device"),
                            ("ethernet_switch", "Ethernet Switch"),
                            ("ethernet_hub", "Ethernet Hub"),
                            ("cloud", "Cloud"),
                            ("nat", "NAT"),
                            ("custom", "Custom"),
                        ],
                        max_length=50,
                        verbose_name="Type de nœud",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("started", "Démarré"),
                            ("stopped", "Arrêté"),
                            ("suspended", "Suspendu"),
                            ("unknown", "Inconnu"),
                        ],
                        default="stopped",
                        max_length=50,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "console_type",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Type de console"
                    ),
                ),
                (
                    "console_port",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Port console"
                    ),
                ),
                ("x", models.IntegerField(default=0, verbose_name="Position X")),
                ("y", models.IntegerField(default=0, verbose_name="Position Y")),
                (
                    "symbol",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Symbole"
                    ),
                ),
                (
                    "properties",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Propriétés"
                    ),
                ),
                (
                    "compute_id",
                    models.CharField(
                        default="local", max_length=255, verbose_name="ID de compute"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
            ],
            options={
                "verbose_name": "Nœud GNS3",
                "verbose_name_plural": "Nœuds GNS3",
                "ordering": ["project", "name"],
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Nom")),
                (
                    "project_id",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="ID GNS3"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("open", "Ouvert"),
                            ("closed", "Fermé"),
                            ("suspended", "Suspendu"),
                        ],
                        default="closed",
                        max_length=50,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "path",
                    models.CharField(blank=True, max_length=512, verbose_name="Chemin"),
                ),
                (
                    "filename",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Nom de fichier"
                    ),
                ),
                (
                    "auto_start",
                    models.BooleanField(
                        default=False, verbose_name="Démarrage automatique"
                    ),
                ),
                (
                    "auto_close",
                    models.BooleanField(
                        default=True, verbose_name="Fermeture automatique"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="gns3_projects",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Créé par",
                    ),
                ),
            ],
            options={
                "verbose_name": "Projet GNS3",
                "verbose_name_plural": "Projets GNS3",
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="Script",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Nom")),
                (
                    "script_type",
                    models.CharField(
                        choices=[
                            ("bash", "Bash Shell"),
                            ("python", "Python"),
                            ("expect", "Expect Script"),
                            ("cisco_ios", "Cisco IOS Commands"),
                            ("juniper_junos", "Juniper JunOS Commands"),
                            ("custom", "Custom"),
                        ],
                        max_length=50,
                        verbose_name="Type de script",
                    ),
                ),
                ("content", models.TextField(verbose_name="Contenu")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "node_type_filter",
                    models.CharField(
                        blank=True,
                        help_text="Type de nœud sur lequel ce script peut être exécuté",
                        max_length=50,
                        verbose_name="Filtre de type de nœud",
                    ),
                ),
                (
                    "is_template",
                    models.BooleanField(
                        default=False,
                        help_text="Script template avec variables à remplacer",
                        verbose_name="Template",
                    ),
                ),
                (
                    "template_variables",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Variables disponibles dans le template",
                        verbose_name="Variables de template",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="gns3_scripts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Créé par",
                    ),
                ),
            ],
            options={
                "verbose_name": "Script GNS3",
                "verbose_name_plural": "Scripts GNS3",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Server",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Nom")),
                ("host", models.CharField(max_length=255, verbose_name="Hôte")),
                (
                    "port",
                    models.PositiveIntegerField(
                        default=3080,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(65535),
                        ],
                        verbose_name="Port",
                    ),
                ),
                (
                    "protocol",
                    models.CharField(
                        choices=[("http", "HTTP"), ("https", "HTTPS")],
                        default="http",
                        max_length=5,
                        verbose_name="Protocole",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Nom d'utilisateur"
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Mot de passe"
                    ),
                ),
                (
                    "verify_ssl",
                    models.BooleanField(default=True, verbose_name="Vérifier SSL"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Actif")),
                (
                    "timeout",
                    models.PositiveIntegerField(
                        default=30,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(300),
                        ],
                        verbose_name="Timeout (secondes)",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
            ],
            options={
                "verbose_name": "Serveur GNS3",
                "verbose_name_plural": "Serveurs GNS3",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Workflow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Nom")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "steps",
                    models.JSONField(
                        help_text="Définition des étapes du workflow",
                        verbose_name="Étapes",
                    ),
                ),
                (
                    "is_template",
                    models.BooleanField(
                        default=False,
                        help_text="Workflow template avec variables à remplacer",
                        verbose_name="Template",
                    ),
                ),
                (
                    "template_variables",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Variables disponibles dans le template",
                        verbose_name="Variables de template",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="gns3_workflows",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Créé par",
                    ),
                ),
            ],
            options={
                "verbose_name": "Workflow GNS3",
                "verbose_name_plural": "Workflows GNS3",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="WorkflowExecution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("running", "En cours"),
                            ("completed", "Terminé"),
                            ("failed", "Échoué"),
                            ("cancelled", "Annulé"),
                        ],
                        default="pending",
                        max_length=50,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "parameters",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Paramètres"
                    ),
                ),
                (
                    "results",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Résultats"
                    ),
                ),
                (
                    "current_step",
                    models.IntegerField(default=0, verbose_name="Étape courante"),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="Message d'erreur"),
                ),
                (
                    "start_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Heure de début"
                    ),
                ),
                (
                    "end_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Heure de fin"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="workflow_executions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Créé par",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workflow_executions",
                        to="gns3_integration.project",
                        verbose_name="Projet",
                    ),
                ),
                (
                    "workflow",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="executions",
                        to="gns3_integration.workflow",
                        verbose_name="Workflow",
                    ),
                ),
            ],
            options={
                "verbose_name": "Exécution de workflow",
                "verbose_name_plural": "Exécutions de workflows",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Template",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Nom")),
                (
                    "template_id",
                    models.CharField(max_length=255, verbose_name="ID GNS3"),
                ),
                (
                    "template_type",
                    models.CharField(
                        choices=[
                            ("qemu", "QEMU VM"),
                            ("docker", "Docker Container"),
                            ("dynamips", "Dynamips Router"),
                            ("iou", "IOU Device"),
                            ("vpcs", "VPCS"),
                            ("cloud", "Cloud"),
                            ("ethernet_switch", "Ethernet Switch"),
                            ("ethernet_hub", "Ethernet Hub"),
                            ("nat", "NAT"),
                            ("custom", "Custom"),
                        ],
                        max_length=50,
                        verbose_name="Type de template",
                    ),
                ),
                (
                    "builtin",
                    models.BooleanField(default=False, verbose_name="Template intégré"),
                ),
                (
                    "symbol",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Symbole"
                    ),
                ),
                (
                    "properties",
                    models.JSONField(default=dict, verbose_name="Propriétés"),
                ),
                (
                    "compute_id",
                    models.CharField(
                        default="local", max_length=255, verbose_name="ID de compute"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                (
                    "server",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="templates",
                        to="gns3_integration.server",
                        verbose_name="Serveur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Template GNS3",
                "verbose_name_plural": "Templates GNS3",
                "ordering": ["name"],
                "unique_together": {("server", "template_id")},
            },
        ),
        migrations.CreateModel(
            name="ScriptExecution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("running", "En cours"),
                            ("completed", "Terminé"),
                            ("failed", "Échoué"),
                            ("cancelled", "Annulé"),
                        ],
                        default="pending",
                        max_length=50,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "parameters",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Paramètres"
                    ),
                ),
                ("output", models.TextField(blank=True, verbose_name="Sortie")),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="Message d'erreur"),
                ),
                (
                    "start_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Heure de début"
                    ),
                ),
                (
                    "end_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Heure de fin"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="script_executions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Créé par",
                    ),
                ),
                (
                    "node",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="script_executions",
                        to="gns3_integration.node",
                        verbose_name="Nœud",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="script_executions",
                        to="gns3_integration.project",
                        verbose_name="Projet",
                    ),
                ),
                (
                    "script",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="executions",
                        to="gns3_integration.script",
                        verbose_name="Script",
                    ),
                ),
            ],
            options={
                "verbose_name": "Exécution de script",
                "verbose_name_plural": "Exécutions de scripts",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="project",
            name="server",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="projects",
                to="gns3_integration.server",
                verbose_name="Serveur",
            ),
        ),
        migrations.AddField(
            model_name="node",
            name="project",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="nodes",
                to="gns3_integration.project",
                verbose_name="Projet",
            ),
        ),
        migrations.AddField(
            model_name="node",
            name="template",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="nodes",
                to="gns3_integration.template",
                verbose_name="Template",
            ),
        ),
        migrations.CreateModel(
            name="Link",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "link_id",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="ID GNS3"
                    ),
                ),
                (
                    "link_type",
                    models.CharField(
                        choices=[
                            ("ethernet", "Ethernet"),
                            ("serial", "Série"),
                            ("custom", "Personnalisé"),
                        ],
                        default="ethernet",
                        max_length=50,
                        verbose_name="Type de lien",
                    ),
                ),
                ("source_port", models.IntegerField(verbose_name="Port source")),
                (
                    "destination_port",
                    models.IntegerField(verbose_name="Port destination"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("started", "Démarré"),
                            ("stopped", "Arrêté"),
                            ("suspended", "Suspendu"),
                        ],
                        default="started",
                        max_length=50,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "properties",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Propriétés"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                (
                    "destination_node",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="incoming_links",
                        to="gns3_integration.node",
                        verbose_name="Nœud destination",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="links",
                        to="gns3_integration.project",
                        verbose_name="Projet",
                    ),
                ),
                (
                    "source_node",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="outgoing_links",
                        to="gns3_integration.node",
                        verbose_name="Nœud source",
                    ),
                ),
            ],
            options={
                "verbose_name": "Lien GNS3",
                "verbose_name_plural": "Liens GNS3",
                "ordering": ["project", "source_node__name"],
            },
        ),
        migrations.CreateModel(
            name="Snapshot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Nom")),
                (
                    "snapshot_id",
                    models.CharField(max_length=255, verbose_name="ID GNS3"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="gns3_snapshots",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Créé par",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="snapshots",
                        to="gns3_integration.project",
                        verbose_name="Projet",
                    ),
                ),
            ],
            options={
                "verbose_name": "Snapshot GNS3",
                "verbose_name_plural": "Snapshots GNS3",
                "ordering": ["-created_at"],
                "unique_together": {("project", "snapshot_id")},
            },
        ),
        migrations.AddIndex(
            model_name="project",
            index=models.Index(
                fields=["project_id"], name="gns3_integr_project_708f00_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="project",
            index=models.Index(fields=["name"], name="gns3_integr_name_dc0c99_idx"),
        ),
        migrations.AddIndex(
            model_name="node",
            index=models.Index(
                fields=["node_id"], name="gns3_integr_node_id_d31a91_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="node",
            index=models.Index(fields=["status"], name="gns3_integr_status_fa711c_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="node",
            unique_together={("project", "node_id")},
        ),
        migrations.AddIndex(
            model_name="link",
            index=models.Index(
                fields=["link_id"], name="gns3_integr_link_id_01aa45_idx"
            ),
        ),
    ]
