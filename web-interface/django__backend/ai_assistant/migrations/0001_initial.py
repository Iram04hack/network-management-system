# Generated by Django 4.2.23 on 2025-06-23 15:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AIModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "provider",
                    models.CharField(
                        choices=[
                            ("openai", "OpenAI"),
                            ("anthropic", "Anthropic"),
                            ("huggingface", "HuggingFace"),
                            ("local", "Local Model"),
                        ],
                        max_length=20,
                    ),
                ),
                ("model_name", models.CharField(max_length=100)),
                ("api_key", models.CharField(blank=True, max_length=255, null=True)),
                ("endpoint", models.URLField(blank=True, null=True)),
                ("capabilities", models.JSONField(default=dict)),
                ("max_tokens", models.IntegerField(default=2048)),
                ("temperature", models.FloatField(default=0.7)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "AI Model",
                "verbose_name_plural": "AI Models",
                "db_table": "ai_assistant_aimodel",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Command",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("network", "Network"),
                            ("system", "System"),
                            ("monitoring", "Monitoring"),
                            ("security", "Security"),
                            ("configuration", "Configuration"),
                        ],
                        max_length=50,
                    ),
                ),
                ("description", models.TextField()),
                ("command_template", models.TextField()),
                ("parameters", models.JSONField(default=dict)),
                (
                    "required_permission",
                    models.CharField(
                        choices=[
                            ("read", "Read Only"),
                            ("write", "Read/Write"),
                            ("admin", "Administrator"),
                        ],
                        max_length=20,
                    ),
                ),
                ("is_safe", models.BooleanField(default=True)),
                ("is_active", models.BooleanField(default=True)),
                ("timeout_seconds", models.IntegerField(default=30)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Command",
                "verbose_name_plural": "Commands",
                "db_table": "ai_assistant_command",
                "ordering": ["category", "name"],
            },
        ),
        migrations.CreateModel(
            name="Conversation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=255)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ai_conversations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Conversation",
                "verbose_name_plural": "Conversations",
                "db_table": "ai_assistant_conversation",
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("user", "User"),
                            ("assistant", "Assistant"),
                            ("system", "System"),
                        ],
                        max_length=20,
                    ),
                ),
                ("content", models.TextField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("processing_time", models.FloatField(blank=True, null=True)),
                ("token_count", models.IntegerField(blank=True, null=True)),
                ("actions_taken", models.JSONField(blank=True, default=list)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "conversation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="ai_assistant.conversation",
                    ),
                ),
                (
                    "model_used",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ai_assistant.aimodel",
                    ),
                ),
            ],
            options={
                "verbose_name": "Message",
                "verbose_name_plural": "Messages",
                "db_table": "ai_assistant_message",
                "ordering": ["timestamp"],
            },
        ),
        migrations.CreateModel(
            name="KnowledgeBase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("network", "Network"),
                            ("security", "Security"),
                            ("troubleshooting", "Troubleshooting"),
                            ("configuration", "Configuration"),
                            ("monitoring", "Monitoring"),
                            ("general", "General"),
                        ],
                        max_length=50,
                    ),
                ),
                ("question", models.TextField()),
                ("answer", models.TextField()),
                ("keywords", models.JSONField(default=list)),
                ("related_commands", models.JSONField(default=list)),
                ("confidence_score", models.FloatField(default=1.0)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Knowledge Base Entry",
                "verbose_name_plural": "Knowledge Base Entries",
                "db_table": "ai_assistant_knowledgebase",
                "ordering": ["-confidence_score", "category"],
            },
        ),
        migrations.CreateModel(
            name="ConversationMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_messages", models.IntegerField(default=0)),
                ("total_tokens", models.IntegerField(default=0)),
                ("average_response_time", models.FloatField(default=0.0)),
                ("successful_commands", models.IntegerField(default=0)),
                ("failed_commands", models.IntegerField(default=0)),
                ("user_satisfaction_score", models.FloatField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "conversation",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="metrics",
                        to="ai_assistant.conversation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Conversation Metrics",
                "verbose_name_plural": "Conversation Metrics",
                "db_table": "ai_assistant_conversationmetrics",
            },
        ),
        migrations.CreateModel(
            name="APIUsage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("request_count", models.IntegerField(default=0)),
                ("token_count", models.IntegerField(default=0)),
                (
                    "cost",
                    models.DecimalField(decimal_places=6, default=0.0, max_digits=10),
                ),
                ("date", models.DateField(auto_now_add=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ai_assistant.aimodel",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "API Usage",
                "verbose_name_plural": "API Usage",
                "db_table": "ai_assistant_apiusage",
                "ordering": ["-date"],
                "unique_together": {("model", "user", "date")},
            },
        ),
    ]
