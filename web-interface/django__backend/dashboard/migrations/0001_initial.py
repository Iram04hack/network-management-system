# Generated by Django 4.2.23 on 2025-06-23 15:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomDashboard",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Identifiant",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Nom")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                ("layout", models.JSONField(default=dict, verbose_name="Mise en page")),
                (
                    "is_default",
                    models.BooleanField(
                        default=False, verbose_name="Tableau de bord par défaut"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Dernière mise à jour"
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(default=False, verbose_name="Public"),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dashboards",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Propriétaire",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tableau de bord personnalisé",
                "verbose_name_plural": "Tableaux de bord personnalisés",
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="DashboardPreset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Nom du préréglage",
                        max_length=100,
                        verbose_name="Nom",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description du préréglage",
                        verbose_name="Description",
                    ),
                ),
                (
                    "theme",
                    models.CharField(
                        default="light",
                        help_text="Thème visuel du tableau de bord",
                        max_length=20,
                        verbose_name="Thème",
                    ),
                ),
                (
                    "layout",
                    models.CharField(
                        default="grid",
                        help_text="Type de disposition des widgets",
                        max_length=20,
                        verbose_name="Disposition",
                    ),
                ),
                (
                    "refresh_interval",
                    models.PositiveIntegerField(
                        default=60,
                        help_text="Intervalle de rafraîchissement en secondes",
                        verbose_name="Intervalle de rafraîchissement",
                    ),
                ),
                (
                    "is_default",
                    models.BooleanField(
                        default=False,
                        help_text="Indique si ce préréglage est le préréglage par défaut",
                        verbose_name="Par défaut",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de mise à jour"
                    ),
                ),
            ],
            options={
                "verbose_name": "Préréglage de tableau de bord",
                "verbose_name_plural": "Préréglages de tableau de bord",
                "ordering": ["-is_default", "name"],
            },
        ),
        migrations.CreateModel(
            name="UserDashboardConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "theme",
                    models.CharField(
                        default="light",
                        help_text="Thème visuel du tableau de bord",
                        max_length=20,
                        verbose_name="Thème",
                    ),
                ),
                (
                    "layout",
                    models.CharField(
                        default="grid",
                        help_text="Type de disposition des widgets",
                        max_length=20,
                        verbose_name="Disposition",
                    ),
                ),
                (
                    "refresh_interval",
                    models.PositiveIntegerField(
                        default=60,
                        help_text="Intervalle de rafraîchissement en secondes",
                        verbose_name="Intervalle de rafraîchissement",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de mise à jour"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        help_text="Utilisateur associé à cette configuration",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dashboard_config",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuration de tableau de bord utilisateur",
                "verbose_name_plural": "Configurations de tableau de bord utilisateur",
            },
        ),
        migrations.CreateModel(
            name="DashboardWidget",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "widget_type",
                    models.CharField(
                        choices=[
                            ("system_health", "Santé du système"),
                            ("network_overview", "Aperçu réseau"),
                            ("alerts", "Alertes"),
                            ("device_status", "État des équipements"),
                            ("interface_status", "État des interfaces"),
                            ("performance_chart", "Graphique de performance"),
                            ("topology", "Topologie"),
                            ("custom_chart", "Graphique personnalisé"),
                        ],
                        help_text="Type de widget à afficher",
                        max_length=50,
                        verbose_name="Type de widget",
                    ),
                ),
                (
                    "position_x",
                    models.PositiveSmallIntegerField(
                        default=0,
                        help_text="Position horizontale du widget",
                        verbose_name="Position X",
                    ),
                ),
                (
                    "position_y",
                    models.PositiveSmallIntegerField(
                        default=0,
                        help_text="Position verticale du widget",
                        verbose_name="Position Y",
                    ),
                ),
                (
                    "width",
                    models.PositiveSmallIntegerField(
                        default=1,
                        help_text="Largeur du widget en unités de grille",
                        verbose_name="Largeur",
                    ),
                ),
                (
                    "height",
                    models.PositiveSmallIntegerField(
                        default=1,
                        help_text="Hauteur du widget en unités de grille",
                        verbose_name="Hauteur",
                    ),
                ),
                (
                    "settings",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Paramètres spécifiques au widget",
                        verbose_name="Paramètres",
                    ),
                ),
                (
                    "config",
                    models.ForeignKey(
                        blank=True,
                        help_text="Configuration utilisateur associée à ce widget",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="widgets",
                        to="dashboard.userdashboardconfig",
                        verbose_name="Configuration utilisateur",
                    ),
                ),
                (
                    "preset",
                    models.ForeignKey(
                        blank=True,
                        help_text="Préréglage associé à ce widget",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="widgets",
                        to="dashboard.dashboardpreset",
                        verbose_name="Préréglage",
                    ),
                ),
            ],
            options={
                "verbose_name": "Widget de tableau de bord",
                "verbose_name_plural": "Widgets de tableau de bord",
                "ordering": ["position_y", "position_x"],
            },
        ),
        migrations.CreateModel(
            name="DashboardViewLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        primary_key=True, serialize=False, verbose_name="Identifiant"
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="Horodatage"
                    ),
                ),
                (
                    "session_id",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Identifiant de session",
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="Adresse IP"
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(blank=True, null=True, verbose_name="User Agent"),
                ),
                (
                    "duration",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Durée (secondes)"
                    ),
                ),
                (
                    "dashboard",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="view_logs",
                        to="dashboard.customdashboard",
                        verbose_name="Tableau de bord",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="dashboard_views",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Journal de vue de tableau de bord",
                "verbose_name_plural": "Journal des vues de tableaux de bord",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["-timestamp"], name="dashboard_d_timesta_ef286e_idx"
                    ),
                    models.Index(
                        fields=["user"], name="dashboard_d_user_id_59b15d_idx"
                    ),
                    models.Index(
                        fields=["dashboard"], name="dashboard_d_dashboa_616ac7_idx"
                    ),
                    models.Index(
                        fields=["session_id"], name="dashboard_d_session_29a123_idx"
                    ),
                ],
            },
        ),
    ]
